'use client'

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import '@mantine/core/styles.css';
import '@mantine/notifications/styles.css';
import {MantineProvider, AppShell, Group, Burger, Skeleton, NavLink} from '@mantine/core';
import { Notifications } from '@mantine/notifications';
import {useDisclosure} from "@mantine/hooks";
import Link from "next/link";
import '@mantine/dates/styles.css';
import { IconChevronRight } from "@tabler/icons-react";
import {useEffect} from "react";
import {usePathname, useRouter} from "next/navigation";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

    const [opened, { toggle }] = useDisclosure();
    const router = useRouter();
    const path = usePathname();

    useEffect(() => {
        // don’t redirect if we’re already on /login
        if (path === "/login") return;

        const token = localStorage.getItem("jwt");
        if (!token) {
            router.replace("/login");
        }
    }, [path, router]);

    return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      <MantineProvider defaultColorScheme="light">
          <Notifications />

        {children}
      </MantineProvider>
      </body>
    </html>
  );
}
